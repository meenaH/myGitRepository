# AWS

- EC2 contains instances of servers

Market-Intelligence-Infrastructure


# Deployment process 

- mi uses Ansible, a deployment and infrastructure management tool
- this gets run as part Makefile build

# Make file

- uses make language & contains instructions for build to Jenkins 


# Docker file 

- Gets the operating system FROM e.g  docker-registry.tescloud.com/tescloud/base-service:14.04
- base service is the container for the OS 
- supervisor watches the app and logs starts and stops of app

# xvfb

- Xvfb is an X server that can run on machines with no display hardware and no physical input devices. It emulates a   dumb framebuffer using virtual memory.
  
- The primary use of this server was intended to be server testing. The fb code for any depth can be exercised with    this server without the need for real hardware that supports the desired depths. The X community has found many      other novel uses for Xvfb, including testing clients against unusual depths and screen configurations, doing batch   processing with Xvfb as a background rendering engine, load testing, as an aid to porting the X server to a new      platform, and providing an unobtrusive way to run applications that donâ€™t really need an X server but insist on      having one anyway

# apt
  
- apt is a linux command


# npmrc : overides default settings in main.yld
  name: Create npm directory
  file: path=/home/ubuntu/npm state=directory

- run npm build locally 
- npm.tescloud.com [this is our private repository].
- registry.tescloud.com [private modules]


# Docker 

- Docker allows you to develop on local containers that contain your applications and services. It can then integrate   into a continuous integration and deployment workflow.

- example, you write code locally and share your development stack via Docker with your colleagues. When you are       ready, you can push your code and the stack you are developing onto a test environment and execute any required      tests. From the testing environment, you can then push the Docker images into production and deploy your code.

- each instance of your app is running in its own container has its own cpu and ram



